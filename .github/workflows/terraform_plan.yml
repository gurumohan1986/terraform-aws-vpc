name: 'AWS VPC Creation - Terraform Plan'

on:
  pull_request:
  push:
    branches:
      - main

env:
  TF_API_TOKEN: "${{ secrets.TF_API_TOKEN }}"
  TF_CLOUD_ORGANIZATION: "mudragiri"
  TF_CLOUD_WORKSPACE: "aws0_useast_1_vpc"
  CONFIG_DIRECTORY: "./"

jobs:
  terraform:
    name: "Terraform Plan"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Format
        id: fmt
        run: terraform fmt
  
      # - name: Terraform Init
      #   id: init
      #   run: terraform init
        
      # - name: Terraform Validate
      #   id: validate
      #   run: terraform validate -no-color
  
      # - name: Terraform Plan
      #   id: plan
      #   # if: github.event_name == 'pull_request'
      #   run: terraform plan -no-color -input=false
      #   continue-on-error: true

      # Set up Terraform Cloud Authentication
      - name: Terraform Cloud Login
        run: |
          echo "Logging into Terraform Cloud"
          echo $HOME
          echo ${{ secrets.TF_API_TOKEN }}
          mkdir -p $HOME/.terraform.d
          echo "{\"credentials\":{\"app.terraform.io\":{\"token\":\"${{ secrets.TF_API_TOKEN }}\"}}}" > $HOME/.terraform.d/credentials.tfrc.json
          cat $HOME/.terraform.d/credentials.tfrc.json
          # terraform login 

      # Initialize Terraform
      - name: Terraform Init
        run: terraform init -backend-config="hostname=app.terraform.io" -backend-config="organization=${{ env.TF_CLOUD_ORGANIZATION}}" -backend-config="workspace=${{ env.TF_CLOUD_WORKSPACE}}"
      
      # Run Terraform plan using specific variable file
      - name: Terraform Plan
        run: terraform plan -var-file=env_variables/aws0_useast_1.tfvars 


      # - name: Upload Configuration
      #   uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.0.0
      #   id: plan-upload
      #   with:
      #     workspace: ${{ env.TF_CLOUD_WORKSPACE }}
      #     directory: ${{ env.CONFIG_DIRECTORY }}
      #     speculative: false

      # - name: Create Plan Run
      #   uses: hashicorp/tfc-workflows-github/actions/create-run@v1.0.0
      #   id: plan-run
      #   with:
      #     workspace: ${{ env.TF_WORKSPACE }}
      #     configuration_version: ${{ steps.plan-upload.outputs.configuration_version_id }}
      #     plan_only: true

      # - name: Get Plan Output
      #   uses: hashicorp/tfc-workflows-github/actions/plan-output@v1.0.0
      #   id: plan-output
      #   with:
      #     plan: ${{ fromJSON(steps.plan-run.outputs.payload).data.relationships.plan.data.id }}

